# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - none

pr:
  - none

pool:
  name: Hosted Windows 2019 with VS2019
  demands: azureps

variables:
  - name: SUBSCRIPTIONID
    value: 1965c25a-b7fd-48b5-a393-c9e785c1c4d9
  - name: SESSIONHOSTRESOURCEGROUPNAME
    value: Azureminilab-WVD-GREEN
  - name: WORKSPACERESOURCEGROUPNAME
    value: Azureminilab-WVD-Pod
  - name: LOCATION
    value: canadacentral
  - name: HOSTPOOLNAME
    value: SBX-HostPool-CENG-t2k-GREEN
  - name: keyVaultName
    value: SBX-CANC-WVD-DEV-tez-KV
  - name: keyVaultRGName
    value: Azureminilab-WVD-POD01
  - name: podResourceGroup
    value: Azureminilab-WVD-POD01

stages:
  # Create Prep Deployment
  - stage: Prep_Deployment
    displayName: Prep Deployment
    jobs:
      - job: Download_Repo
        displayName: Download the Repo
        steps:
          - checkout: self
            displayName: Clone Git Repo

          - task: PowerShell@2
            displayName: List Git Repo Content
            inputs:
              targetType: "inline"
              script: "ls"

          - task: AzureFileCopy@4
            inputs:
              azureSubscription: "AzDevOPS"
              SourcePath: '$(Build.Repository.LocalPath)\*'
              Destination: "AzureBlob"
              storage: "azminlandevops"
              ContainerName: "templates"
              sasTokenTimeOutInMinutes: "240"

  - stage: Test_PS_Script
    displayName: Testing the WVD scripts
    jobs:
      - job: Run_PS_Script
        displayName: Run the WVD script
        steps:
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'AzDevOPS'
              ScriptType: 'FilePath'
              ScriptPath: '$(Build.Repository.LocalPath)\misc\Switch-Users-App-Group.ps1'
              ScriptArguments: '-VaultName $(keyVaultName) -VaultResourceGroupName $(keyVaultRGName) -SubscriptionId $(SUBSCRIPTIONID) -ActiveHostResourceGroupName $(podResourceGroup)'
              azurePowerShellVersion: 'LatestVersion'
              pwsh: true

